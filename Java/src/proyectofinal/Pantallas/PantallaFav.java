/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package proyectofinal.Pantallas;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import org.json.JSONArray;
import org.json.JSONObject;
import proyectofinal.Entidades.UserClient;
import proyectofinal.panel.InfoPanel;
import proyectofinal.scrollbar.ScrollBar;

/**
 *
 * @author Home
 */
public class PantallaFav extends javax.swing.JPanel {

    /**
     * Creates new form HOMEFORM
     */
    public PantallaFav() {
        
        initComponents();

        JSONObject result = UserClient.getFavoritos();

        setLayout(new BorderLayout());

        setPreferredSize(new Dimension(881, 539));

        if (result.getBoolean("success")) {
            JSONArray favoritosList = result.getJSONArray("favoritos_list");
            int rows = (int) Math.ceil(favoritosList.length() / 2.0);

            JPanel formContainer = new JPanel();
            formContainer.setLayout(new GridLayout(rows, 2, 20, 20));

            for (int i = 0; i < favoritosList.length(); i++) {
                JSONArray favorito = favoritosList.getJSONArray(i);
                JPanel panelWrapper = new JPanel(new BorderLayout());
                panelWrapper.setBorder(new EmptyBorder(20, 15, 15, 20));
                InfoPanel mainPanel = new InfoPanel(favorito);
                panelWrapper.add(mainPanel);
                formContainer.add(panelWrapper);
            }

            JPanel rightAlignedFormContainer = new JPanel(new BorderLayout());
            rightAlignedFormContainer.setBorder(new EmptyBorder(30, 40, 0, 0));
            rightAlignedFormContainer.add(formContainer, BorderLayout.CENTER);
            JScrollPane scroll = createScroll();
            scroll.setViewportView(rightAlignedFormContainer);
            scroll.getViewport().setOpaque(false);
            scroll.setViewportBorder(null);
            this.add(scroll, BorderLayout.CENTER);

        } else {
            System.out.println("Error: " + result.getString("message"));
            JOptionPane.showMessageDialog(null, "Error: " + result.getString("message"), "Error", JOptionPane.ERROR_MESSAGE);

        }
    }

    private JScrollPane createScroll() {
        JScrollPane scroll = new JScrollPane();
        scroll.setBorder(null);
        scroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        scroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        scroll.setVerticalScrollBar(new ScrollBar());
        return scroll;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 881, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 539, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
